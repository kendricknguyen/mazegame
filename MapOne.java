
/**
 * Creates the base map using randomized minimaps
 * 
 * @author (Kendy and Javanshir) 
 * @version (12/11/15)
 */
import java.lang.Math;
import java.util.Scanner;
import java.util.Random;
public class MapOne
{
    public static String [][]Map;
    private String[][] PartOne = {
            {"_","_","^","^","_","_","_","_","y","^","_","_","_","_","S","_","y","_","_","_","s","y","y","_","_","_","y","Y","_","_","_","^","^","^","O","^","^","y","y","_","Y","y","y","_","_","s","y","_","y","y","_","_","_","_","y","s","s","^","^","^","_","f","_","_","y","y","O","^","Y","y","y","_","_","_","_","S","S","_","O","_","S","s","s","^","^","_","y","y","y","y","y","^","^","S","S","_","_","_","y","Y",},
            {"_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","_","y","*","_","_","s","_","_","_","_","_","*","Y","_","_","_","^","^","_","O","^","^","y","_","_","_","_","y","_","_","s","y","_","y","y","_","_","_","y","S","S","_","_","_","^","^","_","_","Y","Y","O","_","Y","Y","Y","_","_","_","_","_","_","_","_","s","s","s","S","S","_","y","y","^","^","_","_","_","Y","^","^","s","_","_","Y","Y","Y"},
            {"_","^","_","_","^","_","_","s","s","_","_","_","_","y","_","S","_","s","_","_","_","s","y","_","_","s","f","_","y","y","_","_","^","^","_","_","^","_","_","_","_","O","y","s","S","s","y","_","y","y","_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","O","y","*","_","_","s","_","y","_","_","_","*","Y","_","_","_","^","^","_","O","^","^","y","f","Y","Y","_","y","_","_","s","y","_","y","y"}};
    private String[][] PartTwo = {
            {"_","_","S","_","_","Y","S","_","Y","_","S","S","_","S","_","s","_","_","f","_","_","S","Y","^","^","^","^","y","_","_","y","_","_","s","^","O","_","_","y","_","_","_","_","s","_","_","y","y","^","y","_","_","S","s","O","^","^","^","Y","Y","y","y","^","^","_","_","_","^","^","y","y","_","s","s","_","_","Y","y","y","s","_","_","y","Y","^","_","_","s","^","^","_","_","_","y","Y","y","s","S","S","S"},
            {"_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","_","y","*","_","_","s","_","y","_","_","_","*","Y","_","_","_","^","^","_","O","^","^","_","_","_","Y","_","y","_","_","s","y","_","y","y","_","_","_","S","s","O","^","^","_","_","_","y","y","_","s","_","_","_","_","_","y","y","_","_","_","_","_","_","Y","Y","_","_","_","_","_","_","s","S","s","_","_","_","_","_","_","y","Y","_","_","_"},
            {"_","_","S","_","Y","Y","_","Y","_","_","s","_","_","_","s","_","_","_","_","Y","y","_","_","_","^","^","y","_","_","_","y","_","s","s","^","_","_","_","f","y","_","_","y","_","_","y","y","^","_","_","_","_","_","s","S","^","^","^","_","_","_","y","y","y","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","y","y","y","_","_","_","_","_","_","_","_","_","^","^","^","^","^","^","^","^","^"}};
    private String[][] PartThree = {
            {"Y","Y","y","_","_","S","y","_","_","_","_","_","_","^","y","_","s","_","s","_","_","_","_","_","s","_","^","^","_","^","y","y","s","_","y","^","^","y","_","_","s","s","^","y","Y","O","y","^","^","^","_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","_","y","*","_","_","s","_","y","_","_","_","*","Y","_","_","_","^","^","_","O","^","^","y","_","Y","Y","_","y","_","_","s","y","_","y","y"},
            {"_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","_","^","*","_","_","s","_","^","_","_","_","*","Y","_","_","_","^","^","_","O","^","^","_","_","_","Y","_","y","_","_","s","y","_","y","y","_","_","y","y","_","y","_","_","_","_","_","_","_","_","_","y","y","y","_","_","_","_","_","f","_","_","_","_","_","_","y","y","y","_","_","_","_","_","_","_","_","_","y","y","_","_","_","_","y","y"},
            {"^","_","^","_","Y","_","f","_","_","_","Y","y","_","_","Y","_","s","_","S","_","_","_","_","_","_","_","s","^","_","_","_","*","_","_","Y","y","_","y","Y","^","^","_","_","_","^","^","y","_","_","y","_","_","_","_","_","_","_","_","_","s","s","s","_","_","_","_","_","_","_","Y","Y","^","^","_","_","^","^","^","^","^","_","_","_","_","_","_","_","^","^","_","_","Y","S","S","S","_","_","_","_","_"}};
    private String[][] PartFour = {
            {"Y","^","^","_","_","Y","s","_","_","_","_","Y","Y","_","S","O","O","H","O","O","_","_","_","y","_","_","s","Y","^","^","y","s","s","S","y","y","^","_","^","_","_","_","_","y","_","_","_","s","s","S","_","^","S","^","Y","_","_","_","y","_","Y","Y","_","_","_","_","*","s","S","Y","_","Y","^","_","_","_","y","y","Y","y","^","_","_","_","_","_","O","_","_","_","_","^","^","^","y","y","Y","O","_","_"},
            {"_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","_","Y","*","_","_","s","_","y","_","_","_","*","Y","_","_","_","^","^","f","O","^","^","y","_","_","Y","_","y","_","_","_","y","_","y","y","^","_","_","_","Y","S","f","_","_","_","Y","y","_","_","_","S","_","_","y","_","_","y","^","^","_","_","^","^","Y","y","s","_","_","s","_","_","_","_","S","_","O","H","Y","y","_","y","y","y","_","S"},
            {"_","_","_","_","Y","Y","_","s","^","^","y","y","_","_","_","s","_","O","O","_","_","s","y","_","_","_","s","E","^","^","s","s","_","_","y","Y","^","^","_","_","_","_","^","_","_","_","_","_","S","S","^","^","^","^","y","y","_","_","^","^","y","Y","_","_","S","S","_","_","_","Y","Y","_","_","Y","y","_","_","_","Y","S","s","s","^","^","^","_","_","_","^","^","^","O","O","_","_","_","S","s","s","s"}};
    private String[][] PartFive = {
            {"_","_","^","^","_","_","_","y","y","y","_","_","_","_","S","_","y","^","_","_","s","y","y","_","_","_","y","Y","y","_","_","_","^","y","_","s","_","y","Y","y","^","_","_","s","y","y","_","_","_","y","_","_","y","Y","_","_","*","*","^","^","*","*","_","_","_","S","S","S","_","_","y","Y","y","_","y","_","_","_","_","Y","y","y","_","^","^","^","_","_","^","^","Y","y","Y","_","_","_","_","*","*","_"},
            {"_","_","_","_","_","_","_","s","_","_","_","_","_","_","S","_","_","*","_","_","s","_","y","_","_","_","*","Y","_","_","_","^","^","_","O","_","_","y","_","Y","Y","_","y","^","_","s","y","_","_","_","_","_","s","Y","_","_","_","_","_","_","_","S","S","_","_","_","*","*","^","^","_","_","_","_","_","_","_","Y","y","^","^","^","_","_","_","_","_","_","y","y","_","_","^","_","y","y","_","_","_","_"},
            {"_","^","^","^","^","_","_","s","s","_","_","_","Y","y","_","S","f","s","_","_","_","s","y","_","_","_","_","_","y","_","^","_","_","_","*","_","_","_","_","_","^","y","Y","y","s","_","_","_","y","y","_","_","_","_","_","*","*","_","_","S","_","^","*","_","_","S","y","*","*","S","s","_","y","^","_","_","*","Y","_","_","_","^","^","^","O","O","O","_","_","Y","_","_","y","_","_","_","_","_","^","^"}};
    private String[][] PartSix = {
            {"Y","^","^","_","_","_","s","_","_","S","_","*","*","_","_","O","O","H","_","_","_","s","^","y","f","_","s","Y","_","_","_","_","_","_","O","*","_","_","s","_","^","_","y","Y","^","_","_","y","Y","^","^","Y","_","Y","_","_","_","_","S","_","_","_","y","_","_","^","^","_","^","^","_","_","^","^","_","y","Y","y","S","S","s","_","_","y","_","Y","y","_","y","_","^","s","_","_","S","s","_","_","Y","_"},
            {"_","_","_","_","_","_","_","s","s","_","_","_","_","_","S","_","y","*","_","_","s","_","_","_","_","_","*","Y","_","_","_","^","^","_","O","_","_","y","_","Y","Y","_","y","_","_","s","y","_","_","y","_","_","_","_","Y","Y","Y","Y","y","_","_","_","_","*","y","s","O","*","_","_","_","_","_","_","^","^","y","_","_","_","_","_","y","s","s","_","_","_","_","_","_","_","_","_","y","y","Y","y","y","y"},
            {"_","_","_","_","Y","Y","f","s","_","^","_","_","^","_","_","s","_","O","O","_","_","_","^","_","O","_","s","_","_","^","_","_","y","_","*","O","^","_","s","_","_","S","_","_","_","^","_","_","_","y","_","_","_","_","Y","_","_","^","_","_","_","_","_","*","*","_","_","_","*","*","f","_","*","_","^","^","^","_","_","S","s","s","^","_","_","_","_","_","y","y","s","s","s","_","_","_","_","y","_","_"}};
    

    /**
     * Randomizes the map using the six given map parts.
     * @postcondition Fills the 27x100 with randomized sets of the 6 3x100 minimaps
     */
    public void makeWorld()
    {
        Map= new String [27][100];
        Random num = new Random();
        int rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+3][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+3][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+3][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+3][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+3][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+3][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+6][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+6][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+6][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+6][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+6][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+6][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+9][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+9][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+9][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+9][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+9][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+9][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+12][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+12][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+12][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+12][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+12][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+12][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+15][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+15][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+15][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+15][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+15][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+15][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+18][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+18][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+18][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+18][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+18][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+18][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+21][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+21][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+21][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+21][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+21][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+21][j]=PartSix[i][j];
                }
            }
        }
        rng = num.nextInt(6);
        for (int i = 0; i<3; i++)
        {
            for (int j = 0; j<100;j++)
            {
                if(rng==0)
                {
                    Map[i+24][j]=PartOne[i][j];
                }
                if(rng==1)
                {
                    Map[i+24][j]=PartTwo[i][j];
                }
                if(rng==2)
                {
                    Map[i+24][j]=PartThree[i][j];
                }
                if(rng==3)
                {
                    Map[i+24][j]=PartFour[i][j];
                }
                if(rng==4)
                {
                    Map[i+24][j]=PartFive[i][j];
                }
                if(rng==5)
                {
                    Map[i+24][j]=PartSix[i][j];
                }
            }
        }
    }

    /**
     *@postcondition Prints new world 
     */
    public void printWorld()
    {
        System.out.print('\u000C');
        for (int i=0; i<27;i++)
        {
            for(int j= 0; j<100;j++)
            {
                System.out.print(Map[i][j]);
            }
            System.out.println("");
        }
    }
    
    /**
     * @precondition row must be from 0 and 26 and col from 0 and 99
     * @postcondition sets a given value to a new String
     */
    public static void setWorld(String value, int row, int col)
    {
        Map[row][col]=value;
    }
    /**
     * @return current row and column of character
     */
    public static String getWorld(int row, int col)
    {
        return Map[row][col];
    }
    
}   


